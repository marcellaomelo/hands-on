module Fabricante.Service where

import Fabricante.Model
import Transportadora.Model

template Service
    with 
        provider: Party -- fabricante
        customer: Party -- hospital
        --observers : [Party]
    where   
        signatory  provider, customer

        key(provider, customer) : (Party,Party)
        maintainer key._1 

        choice PedirMedicamento : ContractId PedidoMedicamento 
          with
            name : Text
            lote: Text
            date: Date
            temperatura: Text
          controller customer
            do
              create PedidoMedicamento with ..

        choice ExpedirMedicamento : ContractId MedicamentoExpedido 
          with
            pedidoMedicamentoCid : ContractId PedidoMedicamento
            confirmaRecolhaCid: ContractId ConfirmacaoRecolha  
            name : Text
            status: Text
            lote: Text
            date: Date
            temperatura: Text
          controller customer
            do
              pedidoMedicamento <- fetch pedidoMedicamentoCid
              confirmaRecolha <- fetch confirmaRecolhaCid
              assertMsg 
               "Nome do medicamento está incorreto"
                (pedidoMedicamento.name == confirmaRecolha.name)
              assertMsg 
               "Lote do medicamento está incorreto"
                (pedidoMedicamento.lote == confirmaRecolha.lote)
              assertMsg 
               "Temperatura do medicamento está incorreta"
                (pedidoMedicamento.temperatura == confirmaRecolha.temperatura)  

              create MedicamentoExpedido with ..

        choice ConfirmarEntrega : ContractId ConfirmacaoEntrega 
          with
            confirmaEntregaCid: ContractId ConfirmacaoEntrega
            confirmaRecolhaCid: ContractId ConfirmacaoRecolha
            name : Text
            status : Text
            lote: Text
            date: Date
            temperatura: Text
          controller customer
            do
              confirmaRecolha <- fetch confirmaRecolhaCid
              confirmaEntrega <- fetch confirmaEntregaCid
              assertMsg 
               "Nome do medicamento está incorreto"
                (confirmaEntrega.name == confirmaRecolha.name)
              assertMsg 
               "Lote do medicamento está incorreto"
                (confirmaEntrega.lote == confirmaRecolha.lote)
              assertMsg 
               "Temperatura do medicamento está incorreta"
                (confirmaEntrega.temperatura == confirmaRecolha.temperatura)
              assertMsg 
               "Estado da entrega não atualizado"
                (confirmaEntrega.status  == confirmaRecolha.status)
              assertMsg 
               "Medicamento não entregue na data prevista"
                (confirmaEntrega.date == confirmaRecolha.dataPrevistaEntrega)
            

              create ConfirmacaoEntrega with ..


        choice InformaHospital : ContractId InformarHospital -- duvida
          with
            informarHospitalCid: ContractId InformarHospital
            confirmaRecolhaCid: ContractId ConfirmacaoRecolha
            medicamentoExpedidoCid: ContractId MedicamentoExpedido
            name : Text
            status : Text
            lote: Text
            date: Date
            temperatura: Text
          controller customer
            do
              medicamentoExpedido <- fetch medicamentoExpedidoCid
              informarHospital <- fetch informarHospitalCid
              assertMsg 
               "Medicamento foi entregue a transportadora"
                (medicamentoExpedido.status ==  "Enviado")
              assertMsg 
               "Lote do medicamento"
                (medicamentoExpedido.lote == informarHospital.lote)
              assertMsg 
               "Nome do medicamento"
                (medicamentoExpedido.name == informarHospital.name)  
             
              create InformarHospital with ..      

template Request
  with
    customer : Party
    provider : Party
  where
    signatory customer
    observer provider
    choice Cancel : ()
        controller customer 
        do pure ()

    choice Reject : ()    
        controller provider 
        do pure ()

    choice Approve : ContractId Service

      controller  provider
      do
        create Service with .. 